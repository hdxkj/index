<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:dubbo="http://code.dctctech.com/schema/dubbo"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://code.dctctech.com/schema/dubbo  
        http://code.dctctech.com/schema/dubbo/dubbo.xsd  ">

    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:init.properties"/>
  
    <!-- 加载quartz.xml Job 任务 -->
    <!--  
    <import resource="classpath:quartz.xml"/>
    <bean id="beanFactoryUtil" class="com.dctc.util.BeanFactoryUtil"/>
    -->

    <!-- 数据源配置, 使用DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="defaultAutoCommit" value="false"/>
        <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
    </bean>

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.dctc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--当代理的service层中的方法抛出异常的时候才回滚,必须加rollback-for参数-->
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="alter*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="start*" propagation="REQUIRED" rollback-for="Throwable"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Throwable"/>
            <!--除了上面标识的方法,其他方法全是只读方法-->
            <!--<tx:method name="*" read-only="true" />-->
        </tx:attributes>
    </tx:advice>

    <!-- 定义aop配置 -->
    <aop:config>
        <aop:pointcut id="allServiceMethod"
                      expression="execution(* com.dctc.*.*.*.service.*.*(..))" />
        <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
    </aop:config>

    <!--mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations" value="classpath:config/*/*/*Mapper.xml" />
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--自动扫描映射-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
        <property name="basePackage" value="com.dctc.ts.common.*.mapper;com.dctc.ts.common.*.mappercustom;"  />
    </bean>

	<!-- 系统字典表 -->
	<!--  
	<import resource="config/spring/codeList.xml"/>
	

    <import resource="config/spring/springExtend.xml"/>
    -->

    <!-- ************* BEGIN ehcache缓存 *************
    <cache:annotation-driven />

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager">
            <ref bean="ehcache"></ref>
        </property>
    </bean>
    <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="shared" value="true"/>
        <property name="configLocation" value="classpath:config/spring/ehcache.xml"></property>
    </bean> -->
    <!-- ************* END ehcache缓存 ************* -->

    <!--获取spring环境工具类-->
    <!--  
    <bean class="com.dctc.util.SpringContextHolder" lazy-init="false"></bean>
    -->
    <!-- consumer application name  
    <dubbo:application name="consumer" />   -->
  
    <!-- registry address, used for consumer to discover services 
    <dubbo:registry address="zookeeper://182.92.64.44:2181" />  -->  
    <!--<dubbo:consumer timeout="5000"/>  -->
    <!-- which service to consume?  
    <dubbo:reference id="integrationInfoService" interface="com.dctc.www.usercenter.service.IntegrationInfoService" />  --> 
</beans>
